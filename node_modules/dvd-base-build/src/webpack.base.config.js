// 第三方
import fs from 'fs';
import path from 'path';
import glob from 'glob';
import webpack from 'webpack';
import vuxLoader from 'vux-loader';
import autoprefixer from 'autoprefixer';

// 自定义
import config from './config.js';
// import TextReplacePlugin from './plugin/TextReplacePlugin.js';

// 字符替换loader，替换全局环境变量
let replaceLoader = {
  loader: path.resolve(`${__dirname}/loader/replace-loader.js`),
  options: {
    replacer: (function () {
      let replacer = Object.assign({}, config.replacer);
      delete replacer.regex;
      return replacer;
    })(),
  },
};


/*// 根据当前编译参数修改vue模块的入口js指向
var vuePackageJsonPath = '../../vue/package.json';
var vuePackageJson = require(vuePackageJsonPath);
var targetVue = 'dist/vue.js';
if (config.env) {
  targetVue = 'dist/vue.min.js';
}
if(vuePackageJson.main !== targetVue || vuePackageJson.module !== targetVue) {
  vuePackageJson.main = vuePackageJson.module = targetVue;
  fs.writeFileSync(__dirname + '/' + vuePackageJsonPath, JSON.stringify(vuePackageJson, ' ', 2), {flag: 'w'}, function (err) {
    if (err) {
      throw new Error(err);
    }
  });
}*/


// 解决 vue-lazyload 编译报错问题
var vuePackageJsonPath = `${__dirname}/../../vue-lazyload/.babelrc`;
let data = fs.readFileSync(vuePackageJsonPath, {encoding: 'utf-8'});
let vueLazyloadJson = JSON.parse(data);
// vueLazyloadJson.plugins = [];
vueLazyloadJson = {};
console.log(vueLazyloadJson);
fs.writeFileSync(vuePackageJsonPath, JSON.stringify(vueLazyloadJson, ' ', 2), {flag: 'w'});

let json = {
  entry: {},
  output: {},
  module: {
    rules: [
      {
        test: config.pkg.name == 'm' ? /\.(js|es6)$/ : /\.js$/,
        use: [
          {
            loader: 'babel-loader',
            options: config.babel,
          },
          replaceLoader,
        ],
      },
      {
        test: /\.vue$/,
        use: [
          {
            loader: 'vue-loader',
            options: {
              postcss: [
                autoprefixer(config.autoprefixer),
                // replaceLoader,
              ],
              loaders: {
                js: [{
                  loader: 'babel-loader',
                  options: config.babel,
                }],
              }
            }
          },
          replaceLoader,
        ],
      },
      {
        test: /\.json$/,
        use: [
          {loader: 'json-loader'},
          replaceLoader,
        ]
      },
      {
        test: /\.(scss|css)$/,
        use: [
          {loader: 'style-loader'},
          {loader: 'css-loader'},
          {
            loader: 'postcss-loader',
            options: {
              plugins: [
                autoprefixer(config.autoprefixer),
              ]
            }
          },
          {loader: 'sass-loader'},
        ]
      },
      {test: /\.(png|jpg|jpeg|gif|svg)$/, use: [{loader: 'url-loader'}]},
    ],
  },
  plugins: [],
  externals: {},
  resolve: {
    alias: {
      vue: process.env.mini === 'true' ? 'vue/dist/vue.min.js' : 'vue/dist/vue.js',
    }
  },
};

// 只有m项目支持VUX
if(config.pkg.name == 'm') {
  // vue组件中引用其他模块不加文件后缀（这样做不好），为了兼容才做此设置
  json.resolve.extensions = ['.js', '.vue', '.json'];

  // 增加一些plugin辅助加载vux
  json = vuxLoader.merge(json, {
    plugins: ['vux-ui']
  });
}

export default json;
