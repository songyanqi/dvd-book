// 第三方
import fs from 'fs';
import Vue from 'vue';
import gulp from 'gulp';
import path from 'path';
import glob from 'glob';
import http from 'http';
import https from 'https';
import express from 'express';
import cookieParser from 'cookie-parser';

// 自定义
import util from '../util.js';
import config from '../config.js';

/************************************ 服务端启动任务 ************************************/
gulp.task('task_express', () => {
  console.log(`>>>>>>>>>>>>>>> 服务端启动任务开始执行。${util.getNow()}`);

  // 全局服务对象
  let server = express();

  // 全局cookie解析，解析cookie到req.cookies
  server.use(cookieParser());

  // 全局异常处理，服务端发生异常时将错误返回给页面
  server.use(function (err, req, res, next) {
    console.error(err.stack);
    res.status(500).send('服务器发生异常:\n' + err.stack);
  });

  // 注册路由
  glob.sync(`${__dirname}/../../../../${config.path.router.replace('src/', 'dist/static/')}`).forEach(filePath => {
    console.log(`发现并注册router：${filePath}`);
    let router = require(filePath).default;
    server.use(router);
  });

  // 创建全局http(s)服务
  let httpServer = http.createServer(server);
  let httpsServer = https.createServer({
    key: fs.readFileSync(path.join(__dirname, '/../../cer/private.pem'), 'utf8'),
    cert: fs.readFileSync(path.join(__dirname, '/../../cer/file.crt'), 'utf8'),
  }, server);

  // 启动全局http(s)服务并监听
  httpServer.listen(10000, function () {
    console.log('http服务已启动' + JSON.stringify(httpServer.address()));
  });
  httpsServer.listen(10001, function () {
    console.log('https服务已启动' + JSON.stringify(httpsServer.address()));
  });
});
