// 第三方
import gulp from 'gulp';
import rename from 'gulp-rename';
import replace from 'gulp-replace';
import minifyHtml from 'gulp-minify-html';
import revCollector from 'swg-gulp-rev-collector';
import size from 'gulp-size';
import fileInclude from 'gulp-file-include';
import addSrc from 'gulp-add-src';

// 自定义
import util from '../util.js';
import config from '../config.js';

/************************************ 编译HTML ************************************/
gulp.task('task_html', function () {
  console.log(`>>>>>>>>>>>>>>> html文件开始编译。${util.getNow()}`);

  return gulp.src(config.path.html)

    // 将html引用的模板添加进来
    .pipe(fileInclude({
      prefix: '@@',
      basepath: config.path.include,
    }))

    // 替换全局环境变量
    .pipe(replace(config.replacer.regex, function (match) {
      return config.replacer[match];
    }))

    // 本地开发环境使用vue开发版有错误校验和提示
    // .pipe(!config.env.env ? replace('integrity="sha256-Gs0UYwrz/B58FsQggzU+vvCSyG/pewemP4Lssjzv8Ho=" src="//cdn-ws.davdian.com/vue/2.4.2/vue.min.js"', `integrity="sha256-CaFg/YykXqx3pn0h0oVBc6u5glps1fubTHqe/gHi/pA=" src="//cdn-ws.davdian.com/vue/2.4.2/vue.js"`) : util.gulpNothing())
    .pipe(config.env.env ? replace(`vendor.dll.js`, `vendor.dll.min.js`) : util.gulpNothing())

    // 替换html中引用的静态资源的md5版本号
    .pipe(config.env.mini ? addSrc(`${config.path.temp}/rev-md5/*.json`) : util.gulpNothing())
    .pipe(config.env.mini ? revCollector() : util.gulpNothing())

    // 压缩HTML（ssr模式不压缩，否则压缩会把<!--vue-ssr-outlet-->删掉导致无法渲染）
    .pipe(config.env.mini && !config.env.ssr ? minifyHtml() : util.gulpNothing())

    // 显示文件体积
    .pipe(size({showFiles: true}))

    // 输出html文件，不按照目录结构，全部输出到view下
    .pipe(rename({
      dirname: 'view',
    }))
    .pipe(gulp.dest(config.path.dist))
    ;
});
