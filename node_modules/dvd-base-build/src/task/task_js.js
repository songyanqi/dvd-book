// 第三方
import gulp from 'gulp';
import size from 'gulp-size';
import webpack from 'webpack';
import rev from 'swg-gulp-rev';
import eslint from 'gulp-eslint';
import uglify from 'gulp-uglify';
import replace from 'gulp-replace';
import webpackStream from 'webpack-stream';

// 自定义
import util from '../util.js';
import config from '../config.js';
import eslintrc from '../eslintrc.js';

/************************************ 构建JS任务 ************************************/
gulp.task('task_js', () => {
  console.log(`>>>>>>>>>>>>>>> js文件开始编译。${util.getNow()}`);

  let webpackConfig = require('../webpack.config.js').default;

  return gulp.src(config.path.js)

    // eslint语法校验
    .pipe(!config.env.env ? eslint(eslintrc) : util.gulpNothing())
    .pipe(!config.env.env ? eslint.format() : util.gulpNothing())

    // webpack编译js
    .pipe(webpackStream(webpackConfig, webpack, function (err, stats) {
    }))

    // 替换全局环境变量，对vue和js不生效因为编译后会破坏变量，目前只给vue中引用的scss使用
    .pipe(replace(config.replacer.regex, function (match) {
      return config.replacer[match];
    }))

    // js压缩混淆
    .pipe(config.env.mini && !config.env.ssr ? uglify() : util.gulpNothing())

    // 发布时去掉严格模式适应更多机型，开发时保留以督促开发人员使用标准的写法。（目前查到安卓5.1上使用了"use strict";的部分页面会语法错误，比如一个对象存在多个同名属性）
    // .pipe(config.env.env ? replace('"use strict";', '') : util.gulpNothing())
    .pipe(replace('"use strict";', ''))
    .pipe(replace("'use strict;'", ''))

    // 显示编译后js文件体积
    .pipe(size({showFiles: true}))

    // 收集js文件的MD5值
    .pipe(config.env.mini ? rev() : util.gulpNothing())

    // 输出js文件
    .pipe(gulp.dest(config.path.static))

    // 输出js文件与MD5值匹配关系的文件
    .pipe(config.env.mini ? rev.manifest('rev-md5/js.json') : util.gulpNothing())
    .pipe(config.env.mini ? gulp.dest(config.path.temp) : util.gulpNothing())
    ;
});
