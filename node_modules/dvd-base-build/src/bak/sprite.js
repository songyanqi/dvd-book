import gulp from 'gulp';
import util from '../util.js';
import fs from 'fs';
import glob from 'glob';
import mergeStream from 'merge-stream';		// 合并流然后返回给run-sequence保证任务顺序执行
import path from 'path';		// 路径解析模块
import spritesmith from 'gulp.spritesmith';		// 精灵图
import config from '../config.js';

/************************************ 合成精灵图 ************************************/

gulp.task('sprite', () => {
  console.log(`>>>>>>>>>>>>>>> 开始合成精灵图。${util.getNow()}`);
  let merged = mergeStream();

  // 遍历icon*名称的目录
  glob.sync(path.normalize(config.path.iconDir)).forEach(function (iconDir) {
    if (!fs.statSync(iconDir).isDirectory()) return;

    let dirArr = iconDir.split('/');

    // 生成文件的basename
    let dirName = dirArr.pop();

    // 路径中的src替换成[[static]]
    dirArr[0] = '[[static]]';

    let stream = gulp.src(iconDir + '/*')
      .pipe(spritesmith({
        cssTemplate: `${__dirname}/../../src/spritesmith.hbs`,
        padding: 30,
        layout: 'top-down',
        imgName: `${dirName}.png`,
        cssName: `../css/_${dirName}.scss`,
        // 取相对路径即可,因为css和img是部署在一起的
        // imgPath: `../img/${dirName}.png`,
        // 取绝对路径即可,因为要做md5版本号
        imgPath: `${dirArr.join('/')}/${dirName}.png`,
        cssVarMap: function (sprite) {
          sprite.mixinName = `i-${sprite.name}`;
        }
      }));

    merged.add(stream.img.pipe(gulp.dest(iconDir + '/..')));
    merged.add(stream.css.pipe(gulp.dest(iconDir + '/..')));
  });
  return merged.isEmpty() ? null : merged;  // 保证顺序执行
});
