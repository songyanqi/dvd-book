'use strict';

var _gulp = require('gulp');

var _gulp2 = _interopRequireDefault(_gulp);

var _util = require('../util.js');

var _util2 = _interopRequireDefault(_util);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _glob = require('glob');

var _glob2 = _interopRequireDefault(_glob);

var _mergeStream = require('merge-stream');

var _mergeStream2 = _interopRequireDefault(_mergeStream);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _gulp3 = require('gulp.spritesmith');

var _gulp4 = _interopRequireDefault(_gulp3);

var _config = require('../config.js');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/************************************ 合成精灵图 ************************************/

// 路径解析模块
_gulp2.default.task('sprite', function () {
  console.log('>>>>>>>>>>>>>>> \u5F00\u59CB\u5408\u6210\u7CBE\u7075\u56FE\u3002' + _util2.default.getNow());
  var merged = (0, _mergeStream2.default)();

  // 遍历icon*名称的目录
  _glob2.default.sync(_path2.default.normalize(_config2.default.path.iconDir)).forEach(function (iconDir) {
    if (!_fs2.default.statSync(iconDir).isDirectory()) return;

    var dirArr = iconDir.split('/');

    // 生成文件的basename
    var dirName = dirArr.pop();

    // 路径中的src替换成[[static]]
    dirArr[0] = '[[static]]';

    var stream = _gulp2.default.src(iconDir + '/*').pipe((0, _gulp4.default)({
      cssTemplate: __dirname + '/../../src/spritesmith.hbs',
      padding: 30,
      layout: 'top-down',
      imgName: dirName + '.png',
      cssName: '../css/_' + dirName + '.scss',
      // 取相对路径即可,因为css和img是部署在一起的
      // imgPath: `../img/${dirName}.png`,
      // 取绝对路径即可,因为要做md5版本号
      imgPath: dirArr.join('/') + '/' + dirName + '.png',
      cssVarMap: function cssVarMap(sprite) {
        sprite.mixinName = 'i-' + sprite.name;
      }
    }));

    merged.add(stream.img.pipe(_gulp2.default.dest(iconDir + '/..')));
    merged.add(stream.css.pipe(_gulp2.default.dest(iconDir + '/..')));
  });
  return merged.isEmpty() ? null : merged; // 保证顺序执行
}); // 精灵图
// 合并流然后返回给run-sequence保证任务顺序执行