'use strict';

var _gulp = require('gulp');

var _gulp2 = _interopRequireDefault(_gulp);

var _gulpRename = require('gulp-rename');

var _gulpRename2 = _interopRequireDefault(_gulpRename);

var _gulpReplace = require('gulp-replace');

var _gulpReplace2 = _interopRequireDefault(_gulpReplace);

var _gulpMinifyHtml = require('gulp-minify-html');

var _gulpMinifyHtml2 = _interopRequireDefault(_gulpMinifyHtml);

var _swgGulpRevCollector = require('swg-gulp-rev-collector');

var _swgGulpRevCollector2 = _interopRequireDefault(_swgGulpRevCollector);

var _gulpSize = require('gulp-size');

var _gulpSize2 = _interopRequireDefault(_gulpSize);

var _gulpFileInclude = require('gulp-file-include');

var _gulpFileInclude2 = _interopRequireDefault(_gulpFileInclude);

var _gulpAddSrc = require('gulp-add-src');

var _gulpAddSrc2 = _interopRequireDefault(_gulpAddSrc);

var _util = require('../util.js');

var _util2 = _interopRequireDefault(_util);

var _config = require('../config.js');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/************************************ 编译HTML ************************************/


// 自定义
// 第三方
_gulp2.default.task('task_html', function () {
  console.log('>>>>>>>>>>>>>>> html\u6587\u4EF6\u5F00\u59CB\u7F16\u8BD1\u3002' + _util2.default.getNow());

  return _gulp2.default.src(_config2.default.path.html)

  // 将html引用的模板添加进来
  .pipe((0, _gulpFileInclude2.default)({
    prefix: '@@',
    basepath: _config2.default.path.include
  }))

  // 替换全局环境变量
  .pipe((0, _gulpReplace2.default)(_config2.default.replacer.regex, function (match) {
    return _config2.default.replacer[match];
  }))

  // 本地开发环境使用vue开发版有错误校验和提示
  // .pipe(!config.env.env ? replace('integrity="sha256-Gs0UYwrz/B58FsQggzU+vvCSyG/pewemP4Lssjzv8Ho=" src="//cdn-ws.davdian.com/vue/2.4.2/vue.min.js"', `integrity="sha256-CaFg/YykXqx3pn0h0oVBc6u5glps1fubTHqe/gHi/pA=" src="//cdn-ws.davdian.com/vue/2.4.2/vue.js"`) : util.gulpNothing())
  .pipe(_config2.default.env.env ? (0, _gulpReplace2.default)('vendor.dll.js', 'vendor.dll.min.js') : _util2.default.gulpNothing())

  // 替换html中引用的静态资源的md5版本号
  .pipe(_config2.default.env.mini ? (0, _gulpAddSrc2.default)(_config2.default.path.temp + '/rev-md5/*.json') : _util2.default.gulpNothing()).pipe(_config2.default.env.mini ? (0, _swgGulpRevCollector2.default)() : _util2.default.gulpNothing())

  // 压缩HTML（ssr模式不压缩，否则压缩会把<!--vue-ssr-outlet-->删掉导致无法渲染）
  .pipe(_config2.default.env.mini && !_config2.default.env.ssr ? (0, _gulpMinifyHtml2.default)() : _util2.default.gulpNothing())

  // 显示文件体积
  .pipe((0, _gulpSize2.default)({ showFiles: true }))

  // 输出html文件，不按照目录结构，全部输出到view下
  .pipe((0, _gulpRename2.default)({
    dirname: 'view'
  })).pipe(_gulp2.default.dest(_config2.default.path.dist));
});