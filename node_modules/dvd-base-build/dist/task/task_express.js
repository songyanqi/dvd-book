'use strict';

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _vue = require('vue');

var _vue2 = _interopRequireDefault(_vue);

var _gulp = require('gulp');

var _gulp2 = _interopRequireDefault(_gulp);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _glob = require('glob');

var _glob2 = _interopRequireDefault(_glob);

var _http = require('http');

var _http2 = _interopRequireDefault(_http);

var _https = require('https');

var _https2 = _interopRequireDefault(_https);

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _cookieParser = require('cookie-parser');

var _cookieParser2 = _interopRequireDefault(_cookieParser);

var _util = require('../util.js');

var _util2 = _interopRequireDefault(_util);

var _config = require('../config.js');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/************************************ 服务端启动任务 ************************************/


// 自定义
_gulp2.default.task('task_express', function () {
  console.log('>>>>>>>>>>>>>>> \u670D\u52A1\u7AEF\u542F\u52A8\u4EFB\u52A1\u5F00\u59CB\u6267\u884C\u3002' + _util2.default.getNow());

  // 全局服务对象
  var server = (0, _express2.default)();

  // 全局cookie解析，解析cookie到req.cookies
  server.use((0, _cookieParser2.default)());

  // 全局异常处理，服务端发生异常时将错误返回给页面
  server.use(function (err, req, res, next) {
    console.error(err.stack);
    res.status(500).send('服务器发生异常:\n' + err.stack);
  });

  // 注册路由
  _glob2.default.sync(__dirname + '/../../../../' + _config2.default.path.router.replace('src/', 'dist/static/')).forEach(function (filePath) {
    console.log('\u53D1\u73B0\u5E76\u6CE8\u518Crouter\uFF1A' + filePath);
    var router = require(filePath).default;
    server.use(router);
  });

  // 创建全局http(s)服务
  var httpServer = _http2.default.createServer(server);
  var httpsServer = _https2.default.createServer({
    key: _fs2.default.readFileSync(_path2.default.join(__dirname, '/../../cer/private.pem'), 'utf8'),
    cert: _fs2.default.readFileSync(_path2.default.join(__dirname, '/../../cer/file.crt'), 'utf8')
  }, server);

  // 启动全局http(s)服务并监听
  httpServer.listen(10000, function () {
    console.log('http服务已启动' + JSON.stringify(httpServer.address()));
  });
  httpsServer.listen(10001, function () {
    console.log('https服务已启动' + JSON.stringify(httpsServer.address()));
  });
}); // 第三方