import http from 'https';
import url from 'url';
import qs from 'querystring';
import runtime from 'dvd-base-js-runtime';
import cookieParser from 'cookie-parser';

function objectToCookieStr(cookies) {
  let result = '';

  if(cookies) {
    let count = 0;

    // 拼接字符串
    for(let i in cookies) {
      result += `${i}=${cookies[i]}; `;
      count ++;
    }

    // 去掉末尾多余分隔符
    if(count > 0) {
      result = result.substr(0, result.length - 2);
    }
  }
  return result;
}

/**
 * 服务端发送http(s)模块
 * @param options {} 同jquery参数
 */
export default {
  send(options = {}, req = {}) {
    return new Promise(function(resolve, reject) {
      try {
        options = Object.assign({}, {
          type: 'get',
          url: '',
          dataType: 'json',
          data: {},
          success() {
          },
          error(err) {
            console.log(`${err.message}\n${err.stack}`);
          },
        }, options);

        // url转为目标location对象
        let location = url.parse(options.url);

        // url参数与data参数合并，data参数优先级高
        let data = Object.assign({}, qs.parse(location.query), options.data);

        // post方法请求体
        let body = Object.prototype.toString.call(options.data) == '[object Object]' ? qs.stringify(options.data) : options.data.toString();
        // 设置请求
        let request = http.request({
          method: options.type,
          host: location.host,
          port: location.port,
          path: !options.type || options.type.toLowerCase() == 'get' ? `${location.path.replace(location.search, '')}?${qs.stringify(data)}` : location.path,
          headers: options.type.toLowerCase() == 'post' ? {
            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',	// 如果content格式为a=1&b=2，则应设置application/x-www-form-urlencoded; 还可以是application/json
            'Content-Length': body.length,
            'Cookie': runtime.isServer() && objectToCookieStr(req.cookies) || runtime.isClient() && document.cookie || '',
          } : {},
        }, res => {
          // 保存全部数据
          let total = '';

          // 数据编码
          res.setEncoding('utf8');

          // 接收到数据段落
          res.on('data', data => {
            // console.log(`接收到数据片段：${data}`)
            total += data;
          });

          // 全部数据接收完毕
          res.on('end', () => {
            if (options.dataType.toLowerCase() == 'json') {
              total = JSON.parse(total);
            }
            console.log(`接收到完整数据片段：${options.dataType.toLowerCase() == 'json' ? JSON.stringify(total, ' ', 2) : total}`);
            resolve(total);
          });
        });

        // 错误回调
        request.on('error', err => {
          console.error(err);
          reject(err);
        })

        // post请求写入数据
        if (options.type.toLowerCase() == 'post') {
          // console.log(`即将请求post方法的body数据是：${body}`);
          request.write(body + '\n');
        }

        // 发送请求
        console.log(request);
        request.end();
      } catch (err) {
        console.error(err);
      }
    });
  }
}
