'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _jsCookie = require('js-cookie');

var _jsCookie2 = _interopRequireDefault(_jsCookie);

var _dvdBaseJsUa = require('dvd-base-js-ua');

var _dvdBaseJsUa2 = _interopRequireDefault(_dvdBaseJsUa);

var _dvdServiceJsUtil = require('dvd-service-js-util');

var _dvdServiceJsUtil2 = _interopRequireDefault(_dvdServiceJsUtil);

var _dvdBaseJsRuntime = require('dvd-base-js-runtime');

var _dvdBaseJsRuntime2 = _interopRequireDefault(_dvdBaseJsRuntime);

var _dvdServiceJsNative = require('dvd-service-js-native');

var _dvdServiceJsNative2 = _interopRequireDefault(_dvdServiceJsNative);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @module dvd-service-js-login
 * @author swg [源码地址](http://gitlab.rd.vyohui.com/FE-Service/dvd-service-js-login.git)
 */
exports.default = {
    /**
     * @method
     * 功能: get dvdsid
     */
    getDvdsid: function getDvdsid() {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            req = _ref.req;

        var dvdsid = req ? req.cookies.dvdsid : _jsCookie2.default.get('dvdsid');
        return Object.prototype.toString.call(dvdsid) === '[object String]' ? dvdsid : '';
    },

    /**
     * 功能: 用户是否已登录
     * 说明: dvdsid第33-39位如果是7个0为未登录
     */
    isLogined: function isLogined() {
        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            req = _ref2.req;

        var dvdsid = this.getDvdsid({ req: req });
        var token = _jsCookie2.default.get('token');
        console.log("-----------------------------", dvdsid, token);
        return dvdsid && dvdsid.substr(32, 7) !== '0000000' || token && token != "";
    },

    /**
     * 功能: 获取session id
     * 说明: 取dvdsid前32位
     */
    getSessionId: function getSessionId() {
        return this.getDvdsid().substr(0, 32);
    },

    /**
     * 功能: 获取userId
     * 说明: 取dvdsid第33-39位,并转为10进制
     */
    getUserId: function getUserId() {
        var sessionId = this.getDvdsid().substr(32, 7);
        return sessionId ? parseInt(sessionId, 16) : '';
    },

    /**
     * 功能: 获取用户身份
     * 说明: 取dvdsid第40位
     */
    getUserStatusCode: function getUserStatusCode() {
        var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            req = _ref3.req;

        return this.getDvdsid({ req: req }).substr(39, 1);
    },

    /**
     * 功能: 跳转到登录页，登录后返回
     * 说明: 调用此方法说明当前页面需要登录，如果未登录跳转登录页
     * @param param.success {Function} app中登录成功回调
     * @param param.error {Function} app中登录失败或者取消登录回调
     */
    goLoginPage: function goLoginPage(param) {
        if (_dvdBaseJsUa2.default.isDvdApp()) {
            _dvdServiceJsNative2.default.Account.login(param);
        } else {
            var url = "/wxlogin/wechatlogin.html";

            if (!_dvdBaseJsUa2.default.isWeiXin()) {
                url = '/login.html';
            }
            location.replace(url + '?referer=' + encodeURIComponent(location.href));
            throw new Error('\u5373\u5C06\u8DF3\u8F6C\u767B\u5F55\u9875(' + location.href + ')\uFF0C\u5DF2\u4E3B\u52A8\u629B\u51FA\u5F02\u5E38\u4E2D\u65AD\u5F53\u524D\u9875\u9762js\u6267\u884C\uFF0C\u8BF7\u5FFD\u7565\u6B64\u5F02\u5E38\u4FE1\u606F~');
        }
    },

    /**
     * 功能: 自动跳转登录页
     * 说明: 调用此方法说明当前页面需要登录，如果未登录跳转登录页
     */
    needLogin: function needLogin(param) {
        if (!this.isLogined()) {
            this.goLoginPage(param);
            return true;
        }
        return false;
    },


    /**
     * 功能: 登录
     * @param param {Object} 复合参数
     * @param param.reload 登录成功后是否刷新页面
     * @param param.url 登录成功后的回跳地址
     * @param param.failUrl 登录失败后的回跳地址
     * @param param.urlParam {Object} 跳到登录页url后面的附带的参数（复合参数，key-value形式，每一项被转化成&xxx=xxx形式）
     */
    login: function login() {
        var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        // 登录成功后是否刷新页面
        param.reload = param.reload !== undefined ? param.reload : true;

        // 如果已登录则不继续执行
        if (this.isLogined()) {
            // 如果有url则跳转url
            if (param.url) {
                if (param.open) {
                    _dvdServiceJsUtil2.default.open(param.url);
                    _dvdServiceJsNative2.default.Browser.open({
                        url: param.url
                    });
                } else {
                    location.href = param.url;
                }
            }
            return;
        }

        if (_dvdBaseJsUa2.default.isDvdApp()) {
            // 唤起app登录
            _dvdServiceJsNative2.default.Account.login({
                success: function success() {
                    if (param.url) {
                        if (param.url.indexOf('/') === 0) {
                            // 若果url是/xxx.html格式，则url前面自动补全协议和域名
                            param.url = location.protocol + '//' + location.host + param.url;
                        }
                        // 需要app把登录后的强制刷新当前页去掉才能生效
                        if (param.open) {
                            _dvdServiceJsUtil2.default.open(param.url);
                        } else {
                            location.href = param.url;
                        }
                        throw new Error('\u5373\u5C06\u8DF3\u8F6C' + param.url + '\uFF0C\u5DF2\u4E3B\u52A8\u629B\u51FA\u5F02\u5E38\u4E2D\u65AD\u5F53\u524D\u9875\u9762js\u6267\u884C\uFF0C\u8BF7\u5FFD\u7565\u6B64\u5F02\u5E38\u4FE1\u606F~');
                        // native.Browser.open({
                        //   param.url,
                        // });
                    } else {
                        if (param.reload) {
                            location.reload();
                        }
                    }
                },
                error: function error() {
                    if (param.failUrl) {
                        location.href = param.failUrl;
                    }
                }
            });
        } else {
            var queryString = '';
            if (param.urlParam) {
                for (var i in param.urlParam) {
                    queryString += '&' + i + '=' + param.urlParam[i];
                }
            }

            // 登录成功回跳地址
            param.url = param.url || location.href;

            // 跳转H5登录页
            var url = "/wxlogin/wechatlogin.html";

            if (!_dvdBaseJsUa2.default.isWeiXin()) {
                url = '/login.html';
            }
            location.replace(url + '?referer=' + encodeURIComponent(param.url) + queryString);
        }
        throw new Error('\u5373\u5C06\u8DF3\u8F6C\u767B\u5F55\u9875(\u767B\u5F55\u6210\u529F\u540E\u56DE\u8DF3\u5730\u5740\u4E3A\uFF1A' + param.url + ')\uFF0C\u5DF2\u4E3B\u52A8\u629B\u51FA\u5F02\u5E38\u4E2D\u65AD\u5F53\u524D\u9875\u9762js\u6267\u884C\uFF0C\u8BF7\u5FFD\u7565\u6B64\u5F02\u5E38\u4FE1\u606F~');
    },

    /**
     * 功能: 是否是已登录的买家
     */
    isBuyer: function isBuyer() {
        return this.isLogined() && this.getUserStatusCode() === '1';
    },

    /**
     * 功能: 是否是已登录的卖家
     */
    isSeller: function isSeller() {
        var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            req = _ref4.req;

        return this.isLogined({ req: req }) && this.getUserStatusCode({ req: req }) === '3';
    },


    /**
     * 兼容server端和client端的进入页面前检测登录方法，可在ssr项目中router的beforeEnter方法中使用
     * @param to
     * @param from
     * @param next
     */
    ssrLogin: function ssrLogin(_ref5) {
        var next = _ref5.next,
            req = _ref5.req,
            res = _ref5.res,
            referrer = _ref5.referrer;

        if (this.isLogined({ req: req })) {
            next();
            return;
        }

        // 去登录页
        if (_dvdBaseJsRuntime2.default.isServer()) {
            var _referrer = _referrer || req.url;
            if (_referrer && _referrer.startsWith('/')) {
                _referrer = req.protocol + '://' + req.hostname + _referrer;
            }
            var url = "/wxlogin/wechatlogin.html";

            if (!_dvdBaseJsUa2.default.isWeiXin(req.headers["user-agent"])) {
                url = '/login.html';
            }
            res.redirect(url + '?referer=' + encodeURIComponent(_referrer));
        } else {
            var _referrer2 = _referrer2 || location.href;
            if (_referrer2 && _referrer2.startsWith('/')) {
                _referrer2 = location.protocol + '://' + location.host + _referrer2;
            }
            this.login({
                url: _referrer2
            });
        }
    }
};